/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.src.project_1;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.lang.classfile.AttributedElement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;
import lib.*;
import lib.TreatmentComponent.CheckInCheckOut;
import lib.TreatmentComponent.DiseaseTreatment;
import lib.TreatmentComponent.DoctorSection;
import lib.TreatmentComponent.Drug;

/**
 *
 * @author ASUS
 */
public class GUI_Input2_1 extends JFrame {
    
    private static final Logger logger = Logger.getLogger(GUI_Input2_1.class.getName());

    /**
     * Creates new form GUI_Input2_1
     */
    public GUI_Input2_1() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel34 = new JLabel();
        jLabel29 = new JLabel();
        jLabel32 = new JLabel();
        jComboBox6 = new JComboBox<>();
        jTextField26 = new JTextField();
        jLabel33 = new JLabel();
        jLabel35 = new JLabel();
        jComboBox7 = new JComboBox<>();
        jTextField12 = new JTextField();
        jLabel36 = new JLabel();
        jComboBox9 = new JComboBox<>();
        jTextField27 = new JTextField();
        jLabel37 = new JLabel();
        jTextField31 = new JTextField();
        jComboBox12 = new JComboBox<>();
        jTextField28 = new JTextField();
        jLabel38 = new JLabel();
        jTextField29 = new JTextField();
        jComboBox13 = new JComboBox<>();
        jTextField30 = new JTextField();
        jLabel39 = new JLabel();
        jLabel40 = new JLabel();
        jLabel41 = new JLabel();
        jLabel42 = new JLabel();
        jTextField32 = new JTextField();
        jTextField34 = new JTextField();
        jTextField33 = new JTextField();
        jLabel43 = new JLabel();
        jComboBox11 = new JComboBox<>();
        jLabel44 = new JLabel();
        jLabel46 = new JLabel();
        jScrollPane1 = new JScrollPane();
        jTextArea1 = new JTextArea();
        jButton7 = new JButton();
        jButton8 = new JButton();
        jButton9 = new JButton();
        jComboBox1 = new JComboBox<>();

        // jTextField12
        ((AbstractDocument) jTextField12.getDocument()).setDocumentFilter(new DocumentFilter() {
            @Override
            public void insertString(FilterBypass fb, int offset, String str, AttributeSet attr) throws BadLocationException {
                if (str == null) return;
                checkAndInsert(fb, offset, 0, str, attr);
            }

            @Override
            public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                if (text == null) return;
                checkAndInsert(fb, offset, length, text, attrs);
            }

            private void checkAndInsert(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                String oldText = fb.getDocument().getText(0, fb.getDocument().getLength());
                String newText = new StringBuilder(oldText)
                        .replace(offset, offset + length, text).toString();

                if (newText.isEmpty()) {
                    super.replace(fb, offset, length, text, attrs);
                    return;
                }

                try {
                    int value = Integer.parseInt(newText);
                    if (value <= 59) {
                        super.replace(fb, offset, length, text, attrs);
                    }
                } catch (NumberFormatException e) {
                    // ถ้าไม่ใช่ตัวเลข เช่นพิมพ์ตัวอักษร จะไม่ทำอะไร
                }
            }
        });
        // jTextfield31
        ((AbstractDocument) jTextField31.getDocument()).setDocumentFilter(new DocumentFilter() {
            @Override
            public void insertString(FilterBypass fb, int offset, String str, AttributeSet attr) throws BadLocationException {
                if (str == null) return;
                checkAndInsert(fb, offset, 0, str, attr);
            }

            @Override
            public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                if (text == null) return;
                checkAndInsert(fb, offset, length, text, attrs);
            }

            private void checkAndInsert(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                String oldText = fb.getDocument().getText(0, fb.getDocument().getLength());
                String newText = new StringBuilder(oldText)
                        .replace(offset, offset + length, text).toString();

                if (newText.isEmpty()) {
                    super.replace(fb, offset, length, text, attrs);
                    return;
                }

                try {
                    int value = Integer.parseInt(newText);
                    if (value <= 31) {
                        super.replace(fb, offset, length, text, attrs);
                    }
                } catch (NumberFormatException e) {
                    // ถ้าไม่ใช่ตัวเลข เช่นพิมพ์ตัวอักษร จะไม่ทำอะไร
                }
            }
        });
        // jTextfield27
        ((AbstractDocument) jTextField27.getDocument()).setDocumentFilter(new DocumentFilter() {
            @Override
            public void insertString(FilterBypass fb, int offset, String str, AttributeSet attr) throws BadLocationException {
                if (str == null) return;
                checkAndInsert(fb, offset, 0, str, attr);
            }

            @Override
            public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                if (text == null) return;
                checkAndInsert(fb, offset, length, text, attrs);
            }

            private void checkAndInsert(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                String oldText = fb.getDocument().getText(0, fb.getDocument().getLength());
                String newText = new StringBuilder(oldText)
                        .replace(offset, offset + length, text).toString();

                if (newText.isEmpty()) {
                    super.replace(fb, offset, length, text, attrs);
                    return;
                }

                try {
                    int value = Integer.parseInt(newText);
                    if (value <= 59) {
                        super.replace(fb, offset, length, text, attrs);
                    }
                } catch (NumberFormatException e) {
                    // ถ้าไม่ใช่ตัวเลข เช่นพิมพ์ตัวอักษร จะไม่ทำอะไร
                }
            }
        });
        // jTextfield29
        ((AbstractDocument) jTextField29.getDocument()).setDocumentFilter(new DocumentFilter() {
            @Override
            public void insertString(FilterBypass fb, int offset, String str, AttributeSet attr) throws BadLocationException {
                if (str == null) return;
                checkAndInsert(fb, offset, 0, str, attr);
            }

            @Override
            public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                if (text == null) return;
                checkAndInsert(fb, offset, length, text, attrs);
            }

            private void checkAndInsert(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                String oldText = fb.getDocument().getText(0, fb.getDocument().getLength());
                String newText = new StringBuilder(oldText)
                        .replace(offset, offset + length, text).toString();

                if (newText.isEmpty()) {
                    super.replace(fb, offset, length, text, attrs);
                    return;
                }

                try {
                    int value = Integer.parseInt(newText);
                    if (value <= 31) {
                        super.replace(fb, offset, length, text, attrs);
                    }
                } catch (NumberFormatException e) {
                    // ถ้าไม่ใช่ตัวเลข เช่นพิมพ์ตัวอักษร จะไม่ทำอะไร
                }
            }
        });


        jLabel34.setText("Time of treatment (hours-minutes)");

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        jLabel29.setFont(new Font("Segoe UI", 1, 12)); // NOI18N
        jLabel29.setText("patient personal information");

        jLabel32.setText("Patient type");

        jComboBox6.setModel(new DefaultComboBoxModel<>(new String[] { "Severe", "Intermediate", "Light" }));

        jTextField26.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jTextField26ActionPerformed(evt);
            }
        });

        jLabel33.setText("diagnose");

        jLabel35.setText("Time of treatment (hours-minutes)");

        jComboBox7.setModel(new DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" ,"5", "6", "7","8", "9", "10","11", "12","13", "14", "15", "16" ,"17", "18", "19","20", "21", "22","23", "24"}));
        jComboBox7.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jComboBox7ActionPerformed(evt);
            }
        });

        jTextField12.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jTextField12ActionPerformed(evt);
            }
        });
        jTextField12.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent evt) {
                jTextField12KeyTyped(evt);
            }
        });

        jLabel36.setText("Treatment time (hours-minutes)");

        jComboBox9.setModel(new DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" ,"5", "6", "7","8", "9", "10","11", "12","13", "14", "15", "16" ,"17", "18", "19","20", "21", "22","23", "24"}));
        jComboBox9.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jComboBox9ActionPerformed(evt);
            }
        });

        jTextField27.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jTextField27ActionPerformed(evt);
            }
        });
        jTextField27.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent evt) {
                jTextField27KeyTyped(evt);
            }
        });

        jLabel37.setText("D/M/Y Time of treatmen");

        jTextField31.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jTextField31ActionPerformed(evt);
            }
        });
        jTextField31.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent evt) {
                jTextField31KeyTyped(evt);
            }
        });

        jComboBox12.setModel(new DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        jComboBox12.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jComboBox12ActionPerformed(evt);
            }
        });

        jTextField28.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jTextField28ActionPerformed(evt);
            }
        });
        jTextField28.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent evt) {
                jTextField28KeyTyped(evt);
            }
        });

        jLabel38.setText("D/M/Y Treatment time");

        jTextField29.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jTextField29ActionPerformed(evt);
            }
        });
        jTextField29.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent evt) {
                jTextField29KeyTyped(evt);
            }
        });

        jComboBox13.setModel(new DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        jComboBox13.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jComboBox13ActionPerformed(evt);
            }
        });

        jTextField30.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jTextField30ActionPerformed(evt);
            }
        });
        jTextField30.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent evt) {
                jTextField30KeyTyped(evt);
            }
        });

        jLabel39.setText("Weight/Height");

        jLabel40.setText("k.g.");

        jLabel41.setText("c.m.");

        jLabel42.setText("pressure");

        jTextField32.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jTextField32ActionPerformed(evt);
            }
        });
        jTextField32.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent evt) {
                jTextField32KeyTyped(evt);
            }
        });

        jTextField34.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jTextField34ActionPerformed(evt);
            }
        });
        jTextField34.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent evt) {
                jTextField34KeyTyped(evt);
            }
        });

        jTextField33.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jTextField33ActionPerformed(evt);
            }
        });
        jTextField33.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent evt) {
                jTextField33KeyTyped(evt);
            }
        });

        jLabel43.setText("Use treatment rights");

        jComboBox11.setModel(new DefaultComboBoxModel<>(new String[] { "National Health Security Rights", "Social Security rights", "Civil servant rights"}));
        jComboBox11.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jComboBox11ActionPerformed(evt);
            }
        });

        jLabel44.setText("medication name");

        jLabel46.setText("Treatment methods");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton7.setBackground(new Color(51, 153, 0));
        jButton7.setForeground(new Color(255, 255, 255));
        jButton7.setText("Reset");
        jButton7.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new Color(0, 153, 255));
        jButton8.setForeground(new Color(255, 255, 255));
        jButton8.setText("Record data");
        jButton8.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setBackground(new Color(113, 106, 106));
        jButton9.setForeground(new Color(255, 255, 255));
        jButton9.setText("back");
        jButton9.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        List<String> drugs = new ArrayList<>();
        try (BufferedReader reader = new BufferedReader(new FileReader("./File/Drug.csv"))) {
            String line;
            reader.readLine();
            while ((line = reader.readLine()) != null) {
                String str[] = line.split(",");
                drugs.add(str[0]); // ลบช่องว่างหัวท้าย
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        jComboBox1 = new JComboBox<>(drugs.toArray(new String[0]));
        jComboBox1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton9, GroupLayout.PREFERRED_SIZE, 111, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7, GroupLayout.PREFERRED_SIZE, 111, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8, GroupLayout.PREFERRED_SIZE, 111, GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29, GroupLayout.PREFERRED_SIZE, 174, GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel35, GroupLayout.PREFERRED_SIZE, 185, GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jComboBox7, GroupLayout.PREFERRED_SIZE, 83, GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField12, GroupLayout.PREFERRED_SIZE, 81, GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel37, GroupLayout.PREFERRED_SIZE, 131, GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField31, GroupLayout.PREFERRED_SIZE, 42, GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBox12, GroupLayout.PREFERRED_SIZE, 104, GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField28, GroupLayout.PREFERRED_SIZE, 42, GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel36, GroupLayout.PREFERRED_SIZE, 171, GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jComboBox9, GroupLayout.PREFERRED_SIZE, 83, GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField27, GroupLayout.PREFERRED_SIZE, 81, GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField29, GroupLayout.PREFERRED_SIZE, 42, GroupLayout.PREFERRED_SIZE)
                                        .addGap(8, 8, 8)
                                        .addComponent(jComboBox13, GroupLayout.PREFERRED_SIZE, 104, GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField30, GroupLayout.PREFERRED_SIZE, 42, GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel38, GroupLayout.PREFERRED_SIZE, 121, GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel33, GroupLayout.PREFERRED_SIZE, 63, GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox11, GroupLayout.PREFERRED_SIZE, 157, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel43))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel44)
                                    .addComponent(jComboBox1, GroupLayout.PREFERRED_SIZE, 157, GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jTextField26, GroupLayout.PREFERRED_SIZE, 504, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 957, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel46, GroupLayout.PREFERRED_SIZE, 105, GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox6, GroupLayout.PREFERRED_SIZE, 157, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel32))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField32, GroupLayout.PREFERRED_SIZE, 46, GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel40)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField34, GroupLayout.PREFERRED_SIZE, 46, GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel41, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel39))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel42)
                                    .addComponent(jTextField33, GroupLayout.PREFERRED_SIZE, 157, GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(123, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel36)
                            .addComponent(jLabel38))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox9, GroupLayout.PREFERRED_SIZE, 22, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField27, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox13, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField30, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField29, GroupLayout.PREFERRED_SIZE, 22, GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel29, GroupLayout.PREFERRED_SIZE, 22, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel39)
                            .addComponent(jLabel42, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField32, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel40)
                                .addComponent(jTextField34, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel41)
                                .addComponent(jTextField33, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel35)
                            .addComponent(jLabel37, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox7, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField12, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField31, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox12, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField28, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jLabel33)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField26, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel46, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 157, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(jLabel44))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox11, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8)
                    .addComponent(jButton9))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.dispose();
        Login1 login = new Login1();
        login.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField26ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jTextField26ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField26ActionPerformed

    private void jComboBox7ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jComboBox7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox7ActionPerformed

    private void jTextField12ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jTextField12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField12ActionPerformed

    private void jTextField12KeyTyped(KeyEvent evt) {//GEN-FIRST:event_jTextField12KeyTyped
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextField12KeyTyped

    private void jTextField27ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jTextField27ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField27ActionPerformed

    private void jTextField27KeyTyped(KeyEvent evt) {//GEN-FIRST:event_jTextField27KeyTyped
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextField27KeyTyped

    private void jComboBox9ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jComboBox9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox9ActionPerformed

    private void jTextField31ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jTextField31ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField31ActionPerformed

    private void jTextField31KeyTyped(KeyEvent evt) {//GEN-FIRST:event_jTextField31KeyTyped
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextField31KeyTyped

    private void jComboBox12ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jComboBox12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox12ActionPerformed

    private void jTextField28ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jTextField28ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField28ActionPerformed

    private void jTextField28KeyTyped(KeyEvent evt) {//GEN-FIRST:event_jTextField28KeyTyped
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextField28KeyTyped

    private void jComboBox13ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jComboBox13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox13ActionPerformed

    private void jTextField30ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jTextField30ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField30ActionPerformed

    private void jTextField30KeyTyped(KeyEvent evt) {//GEN-FIRST:event_jTextField30KeyTyped
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextField30KeyTyped

    private void jTextField32ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jTextField32ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField32ActionPerformed

    private void jTextField32KeyTyped(KeyEvent evt) {//GEN-FIRST:event_jTextField32KeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)) && c!=KeyEvent.VK_PERIOD){
            getToolkit().beep();
            evt.consume();
        }else if(c==KeyEvent.VK_PERIOD && jTextField32.getText().contains(".")){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_jTextField32KeyTyped

    private void jTextField34ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jTextField34ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField34ActionPerformed

    private void jTextField34KeyTyped(KeyEvent evt) {//GEN-FIRST:event_jTextField34KeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)) && c!=KeyEvent.VK_PERIOD){
            getToolkit().beep();
            evt.consume();
        }else if(c==KeyEvent.VK_PERIOD && jTextField34.getText().contains(".")){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_jTextField34KeyTyped

    private void jTextField33ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jTextField33ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField33ActionPerformed

    private void jTextField33KeyTyped(KeyEvent evt) {//GEN-FIRST:event_jTextField33KeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)) && c!=KeyEvent.VK_PERIOD){
            getToolkit().beep();
            evt.consume();
        }else if(c==KeyEvent.VK_PERIOD && jTextField33.getText().contains(".")){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_jTextField33KeyTyped

    private void jComboBox11ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jComboBox11ActionPerformed

    }//GEN-LAST:event_jComboBox11ActionPerformed

    private void jButton7ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        jTextArea1.setText("");
        jTextField12.setText("");
        jTextField26.setText("");
        jTextField27.setText("");
        jTextField28.setText("");
        jTextField29.setText("");
        jTextField30.setText("");
        jTextField31.setText("");
        jTextField32.setText("");
        jTextField33.setText("");
        jTextField34.setText("");
        jComboBox11.setSelectedIndex(0);
        jComboBox12.setSelectedIndex(0);
        jComboBox13.setSelectedIndex(0);
        jComboBox6.setSelectedIndex(0);
        jComboBox7.setSelectedIndex(0);
        jComboBox9.setSelectedIndex(0);
        jComboBox1.setSelectedIndex(0);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if (isAllFieldsFilled()) {
            String fullName = "", section = "", typeDrug = "", id = "";
            CheckInCheckOut checkInCheckOut = new CheckInCheckOut((String) jComboBox7.getSelectedItem()+ ":" + jTextField12.getText() + "/" + jTextField31.getText() + "/" + (String) jComboBox12.getSelectedItem() + "/" + jTextField28.getText()
                    , (String) jComboBox9.getSelectedItem() + ":" + jTextField27.getText() + "/" + jTextField29.getText() + "/" + (String) jComboBox13.getSelectedItem() + "/" + jTextField30.getText());
            DiseaseTreatment diseaseTreatment = new DiseaseTreatment(jTextField26.getText(), jTextArea1.getText(), (String) jComboBox6.getSelectedItem(), (String) jComboBox11.getSelectedItem(),
                    jTextField33.getText(), jTextField32.getText(), jLabel34.getText());
            UserName userName = new UserName();
            DoctorSection doctorSection;
            try {
                File f = new File("./File/Doctor.csv");
                FileReader fr = new FileReader(f);
                BufferedReader br = new BufferedReader(fr);
                String line;
                br.readLine();
                while ((line = br.readLine()) != null) {
                    String str[] = line.split(",");
                    if (userName.getUsername().equals(str[3])) {
                        fullName = str[0] + str[1] + " " + str[2];
                        section = str[5];
                    }
                }
            doctorSection = new DoctorSection(fullName, section);
            } catch (Exception e) {
                throw new RuntimeException(e);
            }

            try {
                File f = new File("./File/Drug.csv");
                FileReader fr = new FileReader(f);
                BufferedReader br = new BufferedReader(fr);
                String line;
                String drugName = (String) jComboBox1.getSelectedItem();
                br.readLine();
                while ((line = br.readLine()) != null) {
                    String str[] = line.split(",");
                    if (drugName.equals(str[0])) {
                        typeDrug = str[1];
                    }
                }
            } catch (Exception e) {
                throw new RuntimeException(e);
            }
            Drug drug = new Drug((String) jComboBox1.getSelectedItem(), typeDrug);
            Treament treament = new Treament(checkInCheckOut, doctorSection, diseaseTreatment, drug);
            ID_Patient id_patient = new ID_Patient();
            id = id_patient.getId_Card();
            // id, docname, sec, patient type, diagnose, treament method, checkin, checkout, weight, high, presure, treatment_rights, drug, tdrug
            String insert = id + "," + treament.getDoctorSection().getDoctor() + "," + treament.getDoctorSection().getSection() + ","
                    + treament.getDiseaseTreatment().getDisease() + "," + treament.getDiseaseTreatment().getMedicalTreatment() + ","
                    + treament.getCheckInCheckOut().getCheckIn() + "," + treament.getCheckInCheckOut().getCheckOut() + ","
                    + treament.getDiseaseTreatment().getWeight() + "," + treament.getDiseaseTreatment().getHigh() + "," + treament.getDiseaseTreatment().getRights()
                    + "," + treament.getDrugs().getDrugNames() + "," + treament.getDrugs().getTypeDrug();
            ReadWriteTreatmentData treatmentData = new ReadWriteTreatmentData();
            treatmentData.writeData(insert);
            JOptionPane.showMessageDialog(this,
                "Patient data recording completed",
                "Recording status",
                JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
            GUI_Input2 IN = new GUI_Input2();
            IN.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this,
                "Patient data recording failed",
                "Recording status",
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
          this.dispose();
          GUI_Input2 searchForm = new GUI_Input2();
          searchForm.setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jTextField29KeyTyped(KeyEvent evt) {//GEN-FIRST:event_jTextField29KeyTyped
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextField29KeyTyped

    private void jTextField29ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jTextField29ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField29ActionPerformed

    private void jComboBox1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | UnsupportedLookAndFeelException ex) {
            logger.log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(() -> new GUI_Input2_1().setVisible(true));
    }
  private boolean isAllFieldsFilled() {
 
    if ( jTextArea1.getText().trim().isEmpty()) return false;
    if (jTextField12.getText().trim().isEmpty()) return false;
    if (jTextField26.getText().trim().isEmpty()) return false;
    if (jTextField27.getText().trim().isEmpty()) return false;
    if (jTextField28.getText().trim().isEmpty()) return false;
    if (jTextField29.getText().trim().isEmpty()) return false;
    if (jTextField30.getText().trim().isEmpty()) return false;
    if (jTextField31.getText().trim().isEmpty()) return false;
    if (jTextField32.getText().trim().isEmpty()) return false;
    if (jTextField33.getText().trim().isEmpty()) return false;
    if (jTextField34.getText().trim().isEmpty()) return false;
    if (jComboBox11.getSelectedIndex() == -1) return false;
    if (jComboBox12.getSelectedIndex() == -1) return false;
    if (jComboBox13.getSelectedIndex() == -1) return false;
    if (jComboBox6.getSelectedIndex() == -1) return false;
    if (jComboBox7.getSelectedIndex() == -1) return false;
    if (jComboBox9.getSelectedIndex() == -1) return false;
     if (jComboBox1.getSelectedIndex() == -1) return false;
    return true;
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton jButton3;
    private JButton jButton4;
    private JButton jButton5;
    private JButton jButton6;
    private JButton jButton7;
    private JButton jButton8;
    private JButton jButton9;
    private JComboBox<String> jComboBox1;
    private JComboBox<String> jComboBox11;
    private JComboBox<String> jComboBox12;
    private JComboBox<String> jComboBox13;
    private JComboBox<String> jComboBox6;
    private JComboBox<String> jComboBox7;
    private JComboBox<String> jComboBox9;
    private JLabel jLabel29;
    private JLabel jLabel32;
    private JLabel jLabel33;
    private JLabel jLabel34;
    private JLabel jLabel35;
    private JLabel jLabel36;
    private JLabel jLabel37;
    private JLabel jLabel38;
    private JLabel jLabel39;
    private JLabel jLabel40;
    private JLabel jLabel41;
    private JLabel jLabel42;
    private JLabel jLabel43;
    private JLabel jLabel44;
    private JLabel jLabel46;
    private JScrollPane jScrollPane1;
    private JTextArea jTextArea1;
    private JTextField jTextField12;
    private JTextField jTextField26;
    private JTextField jTextField27;
    private JTextField jTextField28;
    private JTextField jTextField29;
    private JTextField jTextField30;
    private JTextField jTextField31;
    private JTextField jTextField32;
    private JTextField jTextField33;
    private JTextField jTextField34;
    // End of variables declaration//GEN-END:variables

}
